{"version":3,"sources":["webpack:///src/app/shared/constants/empty-states.assets.ts","webpack:///src/app/shared/enums/empty-states.enum.ts","webpack:///src/app/core/services/empty-state.service.ts","webpack:///src/app/shared/pipes/index.ts","webpack:///src/app/shared/directives/air-pollution.directive.ts","webpack:///src/app/shared/directives/uv-index.directive.ts","webpack:///src/app/shared/pipes/to-integer.pipe.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/shared/pipes/uv-index.pipe.ts","webpack:///src/app/shared/widgets/empty-state/empty-state.component.ts","webpack:///src/app/shared/widgets/empty-state/empty-state.component.html","webpack:///src/app/shared/pipes/air-pollution.pipe.ts","webpack:///src/app/shared/pipes/humidity-range.pipe.ts","webpack:///src/app/shared/pipes/custom-date.pipe.ts","webpack:///src/app/shared/pipes/wind-direction.pipe.ts","webpack:///src/app/shared/directives/index.ts"],"names":["emptyStates","id","GPS","imageSrc","imageAlt","title","content","buttonText","GPS_BLOCKED","NOT_IMPLEMENTED","EmptyStateTypes","EmptyStateService","emptyStateType","find","state","providedIn","AirPollutionDirective","el","renderer","airPollution","changes","airPollutionIndex","currentValue","undefined","firstChange","removeClass","nativeElement","previousValue","addClass","selector","UvIndexDirective","uvi","uvIndexClass","uvIndex","Math","round","ToIntegerPipe","value","name","sharedItems","SharedModule","declarations","imports","exports","UvIndexPipe","EmptyStateComponent","templateUrl","styleUrls","AirPollutionPipe","HumidityRangePipe","CustomDatePipe","format","WindDirectionPipe","compass","windDeg"],"mappings":"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","file":"default~dashboard-dashboard-module~locations-locations-module~map-map-module~settings-settings-module-es5.js","sourcesContent":["import { EmptyStateTypes } from '../enums/empty-states.enum';\nimport { EmptyState } from '../models/empty-state.model';\n\nexport const emptyStates: EmptyState[] = [\n  {\n    id: EmptyStateTypes.GPS,\n    imageSrc: 'assets/icons/global/gps-connection-illustration.svg',\n    imageAlt: 'GPS illustration',\n    title: 'No GPS connection',\n    content: 'Please allow for location permission.',\n    buttonText: 'Allow'\n  },\n  {\n    id: EmptyStateTypes.GPS_BLOCKED,\n    imageSrc: 'assets/icons/global/gps-connection-illustration.svg',\n    imageAlt: 'GPS illustration',\n    title: 'GPS Blocked',\n    content: 'Use the browser menu options to select Always Ask when a site tries to get the current location.',\n  },\n  {\n    id: EmptyStateTypes.NOT_IMPLEMENTED,\n    imageSrc: 'assets/icons/global/not-implemented.svg',\n    imageAlt: 'Feature not implemented',\n    buttonText: 'Go to Dashboard'\n  }\n];\n","export enum EmptyStateTypes {\n  GPS = 1,\n  GPS_BLOCKED,\n  NOT_IMPLEMENTED\n}\n","import { Injectable } from '@angular/core';\n\nimport { EmptyStateTypes } from 'src/app/shared/enums/empty-states.enum';\nimport { EmptyState } from 'src/app/shared/models/empty-state.model';\nimport { emptyStates } from 'src/app/shared/constants/empty-states.assets';\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmptyStateService {\n\n  getEmptyState(emptyStateType: EmptyStateTypes): EmptyState {\n    return emptyStates.find(state => state.id === emptyStateType);\n  }\n\n}\n","export { CustomDatePipe } from './custom-date.pipe';\nexport { ToIntegerPipe } from './to-integer.pipe';\nexport { UvIndexPipe } from './uv-index.pipe';\nexport { AirPollutionPipe } from './air-pollution.pipe';\nexport { WindDirectionPipe } from './wind-direction.pipe';\nexport { HumidityRangePipe } from './humidity-range.pipe';\n","import { Directive, ElementRef, Input, Renderer2, OnChanges, SimpleChanges } from '@angular/core';\n\n@Directive({\n  selector: '[appAirPollution]'\n})\nexport class AirPollutionDirective implements OnChanges {\n  private readonly airPollution = ['good', 'fair', 'air-moderate', 'poor', 'very-poor'];\n\n  @Input('appAirPollution') airPollutionIndex: number;\n\n  constructor(\n    private el: ElementRef,\n    private renderer: Renderer2\n  ) { }\n\n  /*\n  * Using the lifecycle hook OnChanges on AirPollutionDirective to change data values\n  * instead of using a Resolver to wait data from de server before present the view.\n  */\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.airPollutionIndex.currentValue !== undefined) {\n      if (!changes.airPollutionIndex.firstChange) {\n        this.renderer.removeClass(this.el.nativeElement,\n          this.airPollution[changes.airPollutionIndex.previousValue - 1]);\n      }\n      this.renderer.addClass(this.el.nativeElement,\n        this.airPollution[changes.airPollutionIndex.currentValue - 1]);\n    }\n  }\n\n}\n","import { Directive, ElementRef, Input, OnInit, Renderer2 } from '@angular/core';\n\n@Directive({\n  selector: '[appUvIndex]'\n})\nexport class UvIndexDirective implements OnInit {\n  private readonly uvi = ['low', 'low', 'low', 'uv-moderate', 'uv-moderate', 'uv-moderate', 'high', 'high', 'very-high', 'very-high', 'very-high'];\n\n  @Input('appUvIndex') uvIndex: number;\n\n  constructor(\n    private el: ElementRef,\n    private renderer: Renderer2\n  ) { }\n\n  ngOnInit(): void {\n    let uvIndexClass = 'extreme';\n    if (this.uvIndex < 11) {\n      uvIndexClass = this.uvi[Math.round(this.uvIndex)];\n    }\n    this.renderer.addClass(this.el.nativeElement, uvIndexClass);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'toInteger'\n})\nexport class ToIntegerPipe implements PipeTransform {\n\n  transform(value: number): number {\n    return Math.round(value);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport {\n  ToIntegerPipe,\n  CustomDatePipe,\n  UvIndexPipe,\n  AirPollutionPipe,\n  WindDirectionPipe,\n  HumidityRangePipe\n} from './pipes/index';\n\nimport {\n  UvIndexDirective,\n  AirPollutionDirective\n} from './directives/index';\nimport { EmptyStateComponent } from './widgets/empty-state/empty-state.component';\n\nconst sharedItems = [\n  ToIntegerPipe,\n  CustomDatePipe,\n  UvIndexPipe,\n  AirPollutionPipe,\n  UvIndexDirective,\n  AirPollutionDirective,\n  WindDirectionPipe,\n  HumidityRangePipe,\n  EmptyStateComponent\n];\n\n@NgModule({\n  declarations: [...sharedItems],\n  imports: [\n    CommonModule\n  ],\n  exports: [...sharedItems]\n})\nexport class SharedModule { }\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'uvIndex'\n})\nexport class UvIndexPipe implements PipeTransform {\n  private readonly uvi = ['Low', 'Low', 'Low', 'Moderate', 'Moderate', 'Moderate', 'High', 'High', 'Very high', 'Very high', 'Very high'];\n\n  transform(value: number): string {\n    if (value >= 11) {\n      return 'Extreme';\n    }\n    return this.uvi[Math.round(value)];\n  }\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'widget-empty-state',\n  templateUrl: './empty-state.component.html',\n  styleUrls: ['./empty-state.component.scss']\n})\nexport class EmptyStateComponent { }\n","<div class=\"empty-state\">\n  <ng-content select=\"[empty-state-img]\"></ng-content>\n  <ng-content select=\"[empty-state-title]\"></ng-content>\n  <ng-content select=\"[empty-state-content]\"></ng-content>\n  <ng-content select=\"[empty-state-action]\"></ng-content>\n</div>\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'airPollution'\n})\nexport class AirPollutionPipe implements PipeTransform {\n  private readonly airPollution = ['Good', 'Fair', 'Moderate', 'Poor', 'Very Poor'];\n\n  transform(value: number): string {\n    return this.airPollution[value - 1];\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'humidityRange'\n})\nexport class HumidityRangePipe implements PipeTransform {\n\n  transform(value: number): string {\n    if (value <= 30) {\n      return 'Too Dry';\n    }\n    else if (value > 30 && value <= 60) {\n      return 'Comfortable';\n    }\n    else {\n      return 'Too Moist';\n    }\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { formatDate } from '@angular/common';\n\n@Pipe({\n  name: 'customDate'\n})\nexport class CustomDatePipe implements PipeTransform {\n\n  transform(value: number, format: string = 'mediumDate'): string {\n    return formatDate(value * 1000, format, 'en-US');\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'windDirection'\n})\nexport class WindDirectionPipe implements PipeTransform {\n  private readonly compass = ['N', 'NNE', 'NE', 'ENE', 'E', 'ESE', 'SE', 'SSE', 'S', 'SSW', 'SW', 'WSW', 'W', 'WNW', 'NW', 'NNW', 'N'];\n\n  transform(windDeg: number): string {\n    if (windDeg > 360) {\n      return this.compass[Math.round(windDeg % 360 / 22.5)];\n    }\n    return this.compass[Math.round(windDeg / 22.5)];\n  }\n\n}\n","export { UvIndexDirective } from './uv-index.directive';\nexport { AirPollutionDirective } from './air-pollution.directive';\n"]}